{
  "version": 3,
  "sources": ["../../twitch-video-element/dist/react.js", "../../twitch-video-element/dist/twitch-video-element.js"],
  "sourcesContent": ["\"use client\";\r\n\r\n// dist/react.ts\r\nimport React from \"react\";\r\nimport CustomMediaElement from \"./twitch-video-element.js\";\r\n\r\n// ../../node_modules/ce-la-react/dist/ce-la-react.js\r\nvar reservedReactProps = /* @__PURE__ */ new Set([\r\n  \"style\",\r\n  \"children\",\r\n  \"ref\",\r\n  \"key\",\r\n  \"suppressContentEditableWarning\",\r\n  \"suppressHydrationWarning\",\r\n  \"dangerouslySetInnerHTML\"\r\n]);\r\nvar reactPropToAttrNameMap = {\r\n  className: \"class\",\r\n  htmlFor: \"for\"\r\n};\r\nfunction defaultToAttributeName(propName) {\r\n  return propName.toLowerCase();\r\n}\r\nfunction defaultToAttributeValue(propValue) {\r\n  if (typeof propValue === \"boolean\") return propValue ? \"\" : void 0;\r\n  if (typeof propValue === \"function\") return void 0;\r\n  if (typeof propValue === \"object\" && propValue !== null) return void 0;\r\n  return propValue;\r\n}\r\nfunction createComponent({\r\n  react: React2,\r\n  tagName,\r\n  elementClass,\r\n  events,\r\n  displayName,\r\n  defaultProps,\r\n  toAttributeName = defaultToAttributeName,\r\n  toAttributeValue = defaultToAttributeValue\r\n}) {\r\n  const IS_REACT_19_OR_NEWER = Number.parseInt(React2.version) >= 19;\r\n  const ReactComponent = React2.forwardRef((props, ref) => {\r\n    var _a, _b;\r\n    const elementRef = React2.useRef(null);\r\n    const prevElemPropsRef = React2.useRef(/* @__PURE__ */ new Map());\r\n    const eventProps = {};\r\n    const attrs = {};\r\n    const reactProps = {};\r\n    const elementProps = {};\r\n    for (const [k, v] of Object.entries(props)) {\r\n      if (reservedReactProps.has(k)) {\r\n        reactProps[k] = v;\r\n        continue;\r\n      }\r\n      const attrName = toAttributeName(reactPropToAttrNameMap[k] ?? k);\r\n      if (k in elementClass.prototype && !(k in (((_a = globalThis.HTMLElement) == null ? void 0 : _a.prototype) ?? {})) && !((_b = elementClass.observedAttributes) == null ? void 0 : _b.some((attr) => attr === attrName))) {\r\n        elementProps[k] = v;\r\n        continue;\r\n      }\r\n      if (k.startsWith(\"on\")) {\r\n        eventProps[k] = v;\r\n        continue;\r\n      }\r\n      const attrValue = toAttributeValue(v);\r\n      if (attrName && attrValue != null) {\r\n        attrs[attrName] = String(attrValue);\r\n        if (!IS_REACT_19_OR_NEWER) {\r\n          reactProps[attrName] = attrValue;\r\n        }\r\n      }\r\n      if (attrName && IS_REACT_19_OR_NEWER) {\r\n        const attrValueFromDefault = defaultToAttributeValue(v);\r\n        if (attrValue !== attrValueFromDefault) {\r\n          reactProps[attrName] = attrValue;\r\n        } else {\r\n          reactProps[attrName] = v;\r\n        }\r\n      }\r\n    }\r\n    if (typeof window !== \"undefined\") {\r\n      for (const propName in eventProps) {\r\n        const callback = eventProps[propName];\r\n        const useCapture = propName.endsWith(\"Capture\");\r\n        const eventName = ((events == null ? void 0 : events[propName]) ?? propName.slice(2).toLowerCase()).slice(\r\n          0,\r\n          useCapture ? -7 : void 0\r\n        );\r\n        React2.useLayoutEffect(() => {\r\n          const eventTarget = elementRef == null ? void 0 : elementRef.current;\r\n          if (!eventTarget || typeof callback !== \"function\") return;\r\n          eventTarget.addEventListener(eventName, callback, useCapture);\r\n          return () => {\r\n            eventTarget.removeEventListener(eventName, callback, useCapture);\r\n          };\r\n        }, [elementRef == null ? void 0 : elementRef.current, callback]);\r\n      }\r\n      React2.useLayoutEffect(() => {\r\n        if (elementRef.current === null) return;\r\n        const newElemProps = /* @__PURE__ */ new Map();\r\n        for (const key in elementProps) {\r\n          setProperty(elementRef.current, key, elementProps[key]);\r\n          prevElemPropsRef.current.delete(key);\r\n          newElemProps.set(key, elementProps[key]);\r\n        }\r\n        for (const [key, _value] of prevElemPropsRef.current) {\r\n          setProperty(elementRef.current, key, void 0);\r\n        }\r\n        prevElemPropsRef.current = newElemProps;\r\n      });\r\n    }\r\n    if (typeof window === \"undefined\" && (elementClass == null ? void 0 : elementClass.getTemplateHTML) && (elementClass == null ? void 0 : elementClass.shadowRootOptions)) {\r\n      const { mode, delegatesFocus } = elementClass.shadowRootOptions;\r\n      const templateShadowRoot = React2.createElement(\"template\", {\r\n        shadowrootmode: mode,\r\n        shadowrootdelegatesfocus: delegatesFocus,\r\n        dangerouslySetInnerHTML: {\r\n          __html: elementClass.getTemplateHTML(attrs, props)\r\n        }\r\n      });\r\n      reactProps.children = [templateShadowRoot, reactProps.children];\r\n    }\r\n    return React2.createElement(tagName, {\r\n      ...defaultProps,\r\n      ...reactProps,\r\n      ref: React2.useCallback(\r\n        (node) => {\r\n          elementRef.current = node;\r\n          if (typeof ref === \"function\") {\r\n            ref(node);\r\n          } else if (ref !== null) {\r\n            ref.current = node;\r\n          }\r\n        },\r\n        [ref]\r\n      )\r\n    });\r\n  });\r\n  ReactComponent.displayName = displayName ?? elementClass.name;\r\n  return ReactComponent;\r\n}\r\nfunction setProperty(node, name, value) {\r\n  var _a;\r\n  node[name] = value;\r\n  if (value == null && name in (((_a = globalThis.HTMLElement) == null ? void 0 : _a.prototype) ?? {})) {\r\n    node.removeAttribute(name);\r\n  }\r\n}\r\n\r\n// dist/react.ts\r\nvar react_default = createComponent({\r\n  react: React,\r\n  tagName: \"twitch-video\",\r\n  elementClass: CustomMediaElement,\r\n  toAttributeName(propName) {\r\n    if (propName === \"muted\") return \"\";\r\n    if (propName === \"defaultMuted\") return \"muted\";\r\n    return defaultToAttributeName(propName);\r\n  }\r\n});\r\nexport {\r\n  react_default as default\r\n};\r\n/*! Bundled license information:\r\n\r\nce-la-react/dist/ce-la-react.js:\r\n  (**\r\n   * @license\r\n   * Copyright 2018 Google LLC\r\n   * SPDX-License-Identifier: BSD-3-Clause\r\n   *\r\n   * Modified version of `@lit/react` for vanilla custom elements with support for SSR.\r\n   *)\r\n*/\r\n", "const EMBED_BASE = \"https://player.twitch.tv\";\r\nconst MATCH_VIDEO = /(?:www\\.|go\\.)?twitch\\.tv\\/(?:videos?\\/|\\?video=)(\\d+)($|\\?)/;\r\nconst MATCH_CHANNEL = /(?:www\\.|go\\.)?twitch\\.tv\\/([a-zA-Z0-9_]+)($|\\?)/;\r\nconst PlaybackState = {\r\n  IDLE: \"Idle\",\r\n  READY: \"Ready\",\r\n  BUFFERING: \"Buffering\",\r\n  PLAYING: \"Playing\",\r\n  ENDED: \"Ended\"\r\n};\r\nconst PlayerCommands = {\r\n  DISABLE_CAPTIONS: 0,\r\n  ENABLE_CAPTIONS: 1,\r\n  PAUSE: 2,\r\n  PLAY: 3,\r\n  SEEK: 4,\r\n  SET_CHANNEL: 5,\r\n  SET_CHANNEL_ID: 6,\r\n  SET_COLLECTION: 7,\r\n  SET_QUALITY: 8,\r\n  SET_VIDEO: 9,\r\n  SET_MUTED: 10,\r\n  SET_VOLUME: 11\r\n};\r\nfunction getTemplateHTML(attrs, props = {}) {\r\n  const iframeAttrs = {\r\n    src: serializeIframeUrl(attrs, props),\r\n    frameborder: \"0\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    allow: \"accelerometer; fullscreen; autoplay; encrypted-media; picture-in-picture;\",\r\n    sandbox: \"allow-modals allow-scripts allow-same-origin allow-popups allow-popups-to-escape-sandbox\",\r\n    scrolling: \"no\"\r\n  };\r\n  if (props.config) {\r\n    iframeAttrs[\"data-config\"] = JSON.stringify(props.config);\r\n  }\r\n  return (\r\n    /*html*/\r\n    `\r\n    <style>\r\n      :host {\r\n        display: inline-block;\r\n        min-width: 300px;\r\n        min-height: 150px;\r\n        position: relative;\r\n      }\r\n      iframe {\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n      }\r\n      :host(:not([controls])) {\r\n        pointer-events: none;\r\n      }\r\n    </style>\r\n    <iframe${serializeAttributes(iframeAttrs)}></iframe>\r\n  `\r\n  );\r\n}\r\nfunction serializeIframeUrl(attrs, props) {\r\n  var _a;\r\n  if (!attrs.src) return;\r\n  const videoMatch = attrs.src.match(MATCH_VIDEO);\r\n  const channelMatch = attrs.src.match(MATCH_CHANNEL);\r\n  const params = {\r\n    parent: (_a = globalThis.location) == null ? void 0 : _a.hostname,\r\n    // ?controls=true is enabled by default in the iframe\r\n    controls: attrs.controls === \"\" ? null : false,\r\n    autoplay: attrs.autoplay === \"\" ? null : false,\r\n    muted: attrs.muted,\r\n    preload: attrs.preload,\r\n    ...props.config\r\n  };\r\n  if (videoMatch) {\r\n    const videoId = videoMatch[1];\r\n    return `${EMBED_BASE}/?video=v${videoId}&${serialize(params)}`;\r\n  } else if (channelMatch) {\r\n    const channel = channelMatch[1];\r\n    return `${EMBED_BASE}/?channel=${channel}&${serialize(params)}`;\r\n  }\r\n  return \"\";\r\n}\r\nclass TwitchVideoElement extends (globalThis.HTMLElement ?? class {\r\n}) {\r\n  static getTemplateHTML = getTemplateHTML;\r\n  static shadowRootOptions = { mode: \"open\" };\r\n  static observedAttributes = [\"autoplay\", \"controls\", \"loop\", \"muted\", \"playsinline\", \"preload\", \"src\"];\r\n  loadComplete = new PublicPromise();\r\n  #loadRequested;\r\n  #hasLoaded;\r\n  #iframe;\r\n  #playerState = {};\r\n  #currentTime = 0;\r\n  #muted = false;\r\n  #volume = 1;\r\n  #paused = !this.autoplay;\r\n  #seeking = false;\r\n  #readyState = 0;\r\n  #config = null;\r\n  constructor() {\r\n    super();\r\n    this.#upgradeProperty(\"config\");\r\n  }\r\n  get config() {\r\n    return this.#config;\r\n  }\r\n  set config(value) {\r\n    this.#config = value;\r\n  }\r\n  async load() {\r\n    if (this.#loadRequested) return;\r\n    if (!this.shadowRoot) {\r\n      this.attachShadow({ mode: \"open\" });\r\n    }\r\n    const isFirstLoad = !this.#hasLoaded;\r\n    if (this.#hasLoaded) {\r\n      this.loadComplete = new PublicPromise();\r\n    }\r\n    this.#hasLoaded = true;\r\n    await (this.#loadRequested = Promise.resolve());\r\n    this.#loadRequested = null;\r\n    this.#readyState = 0;\r\n    this.dispatchEvent(new Event(\"emptied\"));\r\n    if (!this.src) {\r\n      this.shadowRoot.innerHTML = \"\";\r\n      globalThis.removeEventListener(\"message\", this.#onMessage);\r\n      return;\r\n    }\r\n    this.dispatchEvent(new Event(\"loadstart\"));\r\n    let iframe = this.shadowRoot.querySelector(\"iframe\");\r\n    const attrs = namedNodeMapToObject(this.attributes);\r\n    if (isFirstLoad && iframe) {\r\n      this.#config = JSON.parse(iframe.getAttribute(\"data-config\") || \"{}\");\r\n    }\r\n    if (!(iframe == null ? void 0 : iframe.src) || iframe.src !== serializeIframeUrl(attrs, this)) {\r\n      this.shadowRoot.innerHTML = getTemplateHTML(attrs, this);\r\n      iframe = this.shadowRoot.querySelector(\"iframe\");\r\n    }\r\n    this.#iframe = iframe;\r\n    globalThis.addEventListener(\"message\", this.#onMessage);\r\n  }\r\n  attributeChangedCallback(attrName, oldValue, newValue) {\r\n    if (oldValue === newValue) return;\r\n    switch (attrName) {\r\n      case \"src\":\r\n      case \"controls\": {\r\n        this.load();\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  get src() {\r\n    return this.getAttribute(\"src\");\r\n  }\r\n  set src(value) {\r\n    this.setAttribute(\"src\", value);\r\n  }\r\n  get readyState() {\r\n    return this.#readyState;\r\n  }\r\n  get seeking() {\r\n    return this.#seeking;\r\n  }\r\n  get buffered() {\r\n    var _a, _b;\r\n    return createTimeRanges(0, ((_b = (_a = this.#playerState.stats) == null ? void 0 : _a.videoStats) == null ? void 0 : _b.bufferSize) ?? 0);\r\n  }\r\n  get paused() {\r\n    if (!this.#playerState.playback) return this.#paused;\r\n    return this.#playerState.playback === PlaybackState.IDLE;\r\n  }\r\n  get ended() {\r\n    if (!this.#playerState.playback) return false;\r\n    return this.#playerState.playback === PlaybackState.ENDED;\r\n  }\r\n  get duration() {\r\n    return this.#playerState.duration ?? NaN;\r\n  }\r\n  get autoplay() {\r\n    return this.hasAttribute(\"autoplay\");\r\n  }\r\n  set autoplay(val) {\r\n    if (this.autoplay == val) return;\r\n    this.toggleAttribute(\"autoplay\", Boolean(val));\r\n  }\r\n  get controls() {\r\n    return this.hasAttribute(\"controls\");\r\n  }\r\n  set controls(val) {\r\n    if (this.controls == val) return;\r\n    this.toggleAttribute(\"controls\", Boolean(val));\r\n  }\r\n  get currentTime() {\r\n    if (!this.#playerState.currentTime) return this.#currentTime;\r\n    return this.#playerState.currentTime;\r\n  }\r\n  set currentTime(val) {\r\n    this.#currentTime = val;\r\n    this.loadComplete.then(() => {\r\n      this.#sendCommand(PlayerCommands.SEEK, val);\r\n    });\r\n  }\r\n  get defaultMuted() {\r\n    return this.hasAttribute(\"muted\");\r\n  }\r\n  set defaultMuted(val) {\r\n    this.toggleAttribute(\"muted\", Boolean(val));\r\n  }\r\n  get loop() {\r\n    return this.hasAttribute(\"loop\");\r\n  }\r\n  set loop(val) {\r\n    this.toggleAttribute(\"loop\", Boolean(val));\r\n  }\r\n  get muted() {\r\n    return this.#muted;\r\n  }\r\n  set muted(val) {\r\n    this.#muted = val;\r\n    this.loadComplete.then(() => {\r\n      this.#sendCommand(PlayerCommands.SET_MUTED, val);\r\n    });\r\n  }\r\n  get volume() {\r\n    return this.#volume;\r\n  }\r\n  set volume(val) {\r\n    this.#volume = val;\r\n    this.loadComplete.then(() => {\r\n      this.#sendCommand(PlayerCommands.SET_VOLUME, val);\r\n    });\r\n  }\r\n  get playsInline() {\r\n    return this.hasAttribute(\"playsinline\");\r\n  }\r\n  set playsInline(val) {\r\n    this.toggleAttribute(\"playsinline\", Boolean(val));\r\n  }\r\n  play() {\r\n    this.#paused = false;\r\n    this.#sendCommand(PlayerCommands.PLAY);\r\n  }\r\n  pause() {\r\n    this.#paused = true;\r\n    this.#sendCommand(PlayerCommands.PAUSE);\r\n  }\r\n  #onMessage = async (event) => {\r\n    var _a, _b, _c, _d;\r\n    if (!this.#iframe.contentWindow) return;\r\n    const { data, source } = event;\r\n    const isFromEmbedWindow = source === this.#iframe.contentWindow;\r\n    if (!isFromEmbedWindow) return;\r\n    if (data.namespace === \"twitch-embed\") {\r\n      await new Promise((resolve) => setTimeout(resolve, 10));\r\n      if (data.eventName === \"ready\") {\r\n        this.dispatchEvent(new Event(\"loadcomplete\"));\r\n        this.loadComplete.resolve();\r\n        this.#readyState = 1;\r\n        this.dispatchEvent(new Event(\"loadedmetadata\"));\r\n      } else if (data.eventName === \"seek\") {\r\n        this.#seeking = true;\r\n        this.dispatchEvent(new Event(\"seeking\"));\r\n      } else if (data.eventName === \"playing\") {\r\n        if (this.#seeking) {\r\n          this.#seeking = false;\r\n          this.dispatchEvent(new Event(\"seeked\"));\r\n        }\r\n        this.#readyState = 3;\r\n        this.dispatchEvent(new Event(\"playing\"));\r\n      } else {\r\n        this.dispatchEvent(new Event(data.eventName));\r\n      }\r\n    } else if (data.namespace === \"twitch-embed-player-proxy\" && data.eventName === \"UPDATE_STATE\") {\r\n      const oldDuration = this.#playerState.duration;\r\n      const oldCurrentTime = this.#playerState.currentTime;\r\n      const oldVolume = this.#playerState.volume;\r\n      const oldMuted = this.#playerState.muted;\r\n      const oldBuffered = (_b = (_a = this.#playerState.stats) == null ? void 0 : _a.videoStats) == null ? void 0 : _b.bufferSize;\r\n      this.#playerState = { ...this.#playerState, ...data.params };\r\n      if (oldDuration !== this.#playerState.duration) {\r\n        this.dispatchEvent(new Event(\"durationchange\"));\r\n      }\r\n      if (oldCurrentTime !== this.#playerState.currentTime) {\r\n        this.dispatchEvent(new Event(\"timeupdate\"));\r\n      }\r\n      if (oldVolume !== this.#playerState.volume || oldMuted !== this.#playerState.muted) {\r\n        this.dispatchEvent(new Event(\"volumechange\"));\r\n      }\r\n      if (oldBuffered !== ((_d = (_c = this.#playerState.stats) == null ? void 0 : _c.videoStats) == null ? void 0 : _d.bufferSize)) {\r\n        this.dispatchEvent(new Event(\"progress\"));\r\n      }\r\n    }\r\n  };\r\n  #sendCommand(command, params) {\r\n    if (!this.#iframe.contentWindow) return;\r\n    const message = {\r\n      eventName: command,\r\n      params,\r\n      namespace: \"twitch-embed-player-proxy\"\r\n    };\r\n    this.#iframe.contentWindow.postMessage(message, EMBED_BASE);\r\n  }\r\n  // This is a pattern to update property values that are set before\r\n  // the custom element is upgraded.\r\n  // https://web.dev/custom-elements-best-practices/#make-properties-lazy\r\n  #upgradeProperty(prop) {\r\n    if (Object.prototype.hasOwnProperty.call(this, prop)) {\r\n      const value = this[prop];\r\n      delete this[prop];\r\n      this[prop] = value;\r\n    }\r\n  }\r\n}\r\nfunction namedNodeMapToObject(namedNodeMap) {\r\n  let obj = {};\r\n  for (let attr of namedNodeMap) {\r\n    obj[attr.name] = attr.value;\r\n  }\r\n  return obj;\r\n}\r\nfunction serializeAttributes(attrs) {\r\n  let html = \"\";\r\n  for (const key in attrs) {\r\n    const value = attrs[key];\r\n    if (value === \"\") html += ` ${escapeHtml(key)}`;\r\n    else html += ` ${escapeHtml(key)}=\"${escapeHtml(`${value}`)}\"`;\r\n  }\r\n  return html;\r\n}\r\nfunction escapeHtml(str) {\r\n  return str.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&apos;\").replace(/`/g, \"&#x60;\");\r\n}\r\nfunction serialize(props) {\r\n  return String(new URLSearchParams(filterParams(props)));\r\n}\r\nfunction filterParams(props) {\r\n  let p = {};\r\n  for (let key in props) {\r\n    let val = props[key];\r\n    if (val === true || val === \"\") p[key] = true;\r\n    else if (val === false) p[key] = false;\r\n    else if (val != null) p[key] = val;\r\n  }\r\n  return p;\r\n}\r\nclass PublicPromise extends Promise {\r\n  constructor(executor = () => {\r\n  }) {\r\n    let res, rej;\r\n    super((resolve, reject) => {\r\n      executor(resolve, reject);\r\n      res = resolve;\r\n      rej = reject;\r\n    });\r\n    this.resolve = res;\r\n    this.reject = rej;\r\n  }\r\n}\r\nfunction createTimeRanges(start, end) {\r\n  if (Array.isArray(start)) {\r\n    return createTimeRangesObj(start);\r\n  } else if (start == null || end == null || start === 0 && end === 0) {\r\n    return createTimeRangesObj([[0, 0]]);\r\n  }\r\n  return createTimeRangesObj([[start, end]]);\r\n}\r\nfunction createTimeRangesObj(ranges) {\r\n  Object.defineProperties(ranges, {\r\n    start: {\r\n      value: (i) => ranges[i][0]\r\n    },\r\n    end: {\r\n      value: (i) => ranges[i][1]\r\n    }\r\n  });\r\n  return ranges;\r\n}\r\nif (globalThis.customElements && !globalThis.customElements.get(\"twitch-video\")) {\r\n  globalThis.customElements.define(\"twitch-video\", TwitchVideoElement);\r\n}\r\nvar twitch_video_element_default = TwitchVideoElement;\r\nexport {\r\n  twitch_video_element_default as default\r\n};\r\n"],
  "mappings": "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",
  "names": ["React"]
}
